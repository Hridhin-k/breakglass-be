# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: explaineddigital
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: breakglass-be
# "service" is the name of this project. This will also be added to your AWS resource names.
service: breakglass-be
useDotenv: true
provider:
  name: aws
  runtime: nodejs20.x
  environment:
    DB_HOST: ${env:DB_HOST}
    DB_PORT: ${env:DB_PORT}
    DB_USER: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_DATABASE: ${env:DB_DATABASE}
    JWT_SECRET: ${env:JWT_SECRET}
    BREVO_API_KEY: ${env:BREVO_API_KEY}

plugins:
  - serverless-offline
functions:
  CreateQuestionnaire:
    handler: src/handlers/questionnaireHandler.addQuestionsHandler
    events:
      - http:
          path: questionnaires
          method: post
          cors:
            origins:
              - "*"
  GetQuestionnaires:
    handler: src/handlers/questionnaireHandler.getQuestionsHandler
    events:
      - http:
          path: questionnaires
          method: get
          cors:
            origins:
              - "*"
  UpdateQuestionnaires:
    handler: src/handlers/questionnaireHandler.updateQuestionsHandler
    events:
      - http:
          path: questionnaires
          method: put
          cors:
            origins:
              - "*"
  DeleteQuestionnaires:
    handler: src/handlers/questionnaireHandler.deleteQuestionsHandler
    events:
      - http:
          path: questionnaires
          method: delete
          cors:
            origins:
              - "*"
  SubmitIncident:
    handler: src/handlers/incidentSubmissionHandler.submitIncidentHandler
    events:
      - http:
          path: incident/submit
          method: post
          cors:
            origins:
              - "*"
  GetUserSubmissions:
    handler: src/handlers/incidentSubmissionHandler.getUserSubmissionsHandler
    events:
      - http:
          path: incident/submissions
          method: get
          cors:
            origins:
              - "*"
  UpdateIncident:
    handler: src/handlers/incidentSubmissionHandler.updateIncidentHandler
    events:
      - http:
          path: incident/update
          method: post
          cors:
            origins:
              - "*"
  GetUserData:
    handler: src/handlers/userHandler.getUserHandler
    events:
      - http:
          path: users
          method: get
          cors:
            origins:
              - "*"
  UpdateUserData:
    handler: src/handlers/userHandler.updateUserHandler
    events:
      - http:
          path: users
          method: put
          cors:
            origins:
              - "*"

  authenticate:
    handler: src/handlers/authHandler.handleAuth
    events:
      - http:
          path: authenticate
          method: post
          cors:
            origins:
              - "*"
  notification:
    handler: src/handlers/notificationHandler.handleNotificationWithMiddleware
    events:
      - http:
          path: notifications
          method: post
          cors:
            origins:
              - "*"
